\begin{Verbatim}[commandchars=\\\{\}]
 \PYG{k+kt}{bool} \PYG{n}{\PYGZus{}checkStructuralChange}\PYG{p}{(}\PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{n}{Todo}\PYG{o}{\PYGZgt{}} \PYG{n}{before}\PYG{p}{,} \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{n}{Todo}\PYG{o}{\PYGZgt{}} \PYG{n}{current}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{//calculate the length of the current filtered list}
    \PYG{k+kt}{int} \PYG{n}{currLen} \PYG{o}{=} \PYG{n}{current}\PYG{p}{.}\PYG{n}{length}\PYG{p}{;}
    \PYG{c+c1}{//calculate the length of the previous filtered list}
    \PYG{k+kt}{int} \PYG{n}{prevLen} \PYG{o}{=} \PYG{n}{before}\PYG{p}{.}\PYG{n}{length}\PYG{p}{;}

    \PYG{k+kt}{bool} \PYG{n}{structureRebuildLen} \PYG{o}{=} \PYG{p}{(}\PYG{n}{currLen} \PYG{o}{!=} \PYG{n}{prevLen}\PYG{p}{);}
    \PYG{c+c1}{//check if the two lengths differ}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{structureRebuildLen}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{// if they differ a structural change occured}
      \PYG{k}{return} \PYG{k+kc}{true}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{//map the current list to a list containing the ids only}
      \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{currIds} \PYG{o}{=} \PYG{n}{current}\PYG{p}{.}\PYG{n}{map}\PYG{p}{((}\PYG{n}{todo}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{n}{todo}\PYG{p}{.}\PYG{n}{id}\PYG{p}{).}\PYG{n}{toList}\PYG{p}{();}
      \PYG{c+c1}{//map the previous list to a list containing the ids only}
      \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{prevIds} \PYG{o}{=} \PYG{n}{before}\PYG{p}{.}\PYG{n}{map}\PYG{p}{((}\PYG{n}{todo}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{n}{todo}\PYG{p}{.}\PYG{n}{id}\PYG{p}{).}\PYG{n}{toList}\PYG{p}{();}
      \PYG{c+c1}{//check they are the same}
      \PYG{k+kt}{bool} \PYG{n}{sameIds} \PYG{o}{=} \PYG{n}{listEquals}\PYG{p}{(}\PYG{n}{currIds}\PYG{p}{,} \PYG{n}{prevIds}\PYG{p}{);}
      \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{sameIds}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{//if they differ a structural change uccurred}
        \PYG{k}{return} \PYG{k+kc}{true}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{// no structural change occured}
        \PYG{k}{return} \PYG{k+kc}{false}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{n+nd}{@override}
  \PYG{k+kt}{bool} \PYG{n}{updateShouldNotifyDependent}\PYG{p}{(}
      \PYG{n}{TodoInheritedData} \PYG{n}{oldWidget}\PYG{p}{,} \PYG{n}{Set}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{dependencies}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{dependencies}\PYG{p}{.}\PYG{n}{contains}\PYG{p}{(}\PYG{l+m}{1}\PYG{p}{))} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{// the widget do always need to rebuild}
      \PYG{k}{return} \PYG{k+kc}{true}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{dependencies}\PYG{p}{.}\PYG{n}{contains}\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{))} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{//widget registered for structural changes}
      \PYG{k+kt}{bool} \PYG{n}{structuralChange} \PYG{o}{=}
          \PYG{n}{\PYGZus{}checkStructuralChange}\PYG{p}{(}\PYG{n}{oldWidget}\PYG{p}{.}\PYG{n}{filteredTodos}\PYG{p}{,} \PYG{n}{filteredTodos}\PYG{p}{);}
      \PYG{k}{if} \PYG{p}{(}\PYG{n}{structuralChange}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{//in case structural changes occurred}
        \PYG{k}{return} \PYG{k+kc}{true}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
        \PYG{k}{return} \PYG{k+kc}{false}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{c+c1}{//if this point is reached the widget registered}
    \PYG{c+c1}{//for a particular todo\PYGZsq{}s changes}
    \PYG{c+c1}{//check if that todo changed}
    \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{bool}\PYG{o}{\PYGZgt{}} \PYG{n}{components} \PYG{o}{=} \PYG{p}{[];}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kd}{var} \PYG{n}{element} \PYG{k}{in} \PYG{n}{filteredTodos}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{n}{components}\PYG{p}{.}\PYG{n}{add}\PYG{p}{(}\PYG{n}{dependencies}\PYG{p}{.}\PYG{n}{contains}\PYG{p}{(}\PYG{n}{element}\PYG{p}{.}\PYG{n}{id}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}}
          \PYG{o}{!}\PYG{n}{oldWidget}\PYG{p}{.}\PYG{n}{filteredTodos}\PYG{p}{.}\PYG{n}{contains}\PYG{p}{(}\PYG{n}{element}\PYG{p}{));}
    \PYG{p}{\PYGZcb{}}
    \PYG{k+kt}{bool} \PYG{n}{res} \PYG{o}{=} \PYG{n}{components}\PYG{p}{.}\PYG{n}{fold}\PYG{p}{(}
        \PYG{k+kc}{false}\PYG{p}{,} \PYG{p}{(}\PYG{k+kt}{bool} \PYG{n}{previousValue}\PYG{p}{,} \PYG{k+kt}{bool} \PYG{n}{element}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{n}{previousValue} \PYG{o}{||} \PYG{n}{element}\PYG{p}{);}
    \PYG{k}{return} \PYG{n}{res}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
\end{Verbatim}
